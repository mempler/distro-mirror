name: Build Docker Images

on:
  push:
    branches: [main, master]
    paths:
      - "arch/**"
      - "ubuntu/**"
      - "docker-compose.yml"
      - ".github/workflows/build-images.yml"
  pull_request:
    branches: [main, master]
    paths:
      - "arch/**"
      - "ubuntu/**"
      - "docker-compose.yml"
      - ".github/workflows/build-images.yml"
  workflow_dispatch: # Allow manual triggering

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: arch
            platform: linux/amd64
            runner: ubuntu-24.04
            arch: amd64

          - name: arch
            platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64

          - name: ubuntu
            platform: linux/amd64
            runner: ubuntu-24.04
            arch: amd64

          - name: ubuntu
            platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64

      fail-fast: false
    outputs:
      arch-amd64-digest: ${{ steps.build.outputs.digest }}
      arch-arm64-digest: ${{ steps.build.outputs.digest }}
      ubuntu-amd64-digest: ${{ steps.build.outputs.digest }}
      ubuntu-arm64-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        if: matrix.arch == 'amd64'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for ${{ matrix.name }}-${{ matrix.arch }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}
          tags: |
            type=raw,value=${{ github.ref_name }}-${{ matrix.arch }}
            type=raw,value=${{ github.sha }}-${{ matrix.arch }}
            type=raw,value=temp-${{ matrix.arch }}-${{ github.run_id }}
          labels: |
            org.opencontainers.image.title=${{ matrix.name }}-${{ matrix.arch }}
            org.opencontainers.image.description=${{ matrix.name }} mirror for ${{ matrix.arch }}
            org.opencontainers.image.vendor=distro-mirror

      - name: Build and push ${{ matrix.name }}-${{ matrix.arch }}
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.name }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.name }}-${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.name }}-${{ matrix.arch }}
          provenance: false
          sbom: false
          outputs: type=image,name=${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }},push-by-digest=true,name-canonical=true

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        name: [arch, ubuntu]
    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for ${{ matrix.name }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create and push manifest for ${{ matrix.name }}
        run: |
          # Get the temporary tag for each architecture
          TEMP_TAG="temp-amd64-${{ github.run_id }}"
          ARM_TEMP_TAG="temp-arm64-${{ github.run_id }}"
          
          # Create multi-arch manifest
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:${{ github.ref_name }} \
            --tag ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:${{ github.sha }} \
            $(if [ "${{ github.ref }}" = "refs/heads/main" ] || [ "${{ github.ref }}" = "refs/heads/master" ]; then echo "--tag ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:latest"; fi) \
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:$TEMP_TAG \
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:$ARM_TEMP_TAG

      - name: Clean up temporary tags
        run: |
          # Clean up temporary images
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:temp-amd64-${{ github.run_id }} || true
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}:temp-arm64-${{ github.run_id }} || true
